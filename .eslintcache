[{"/mnt/c/Mine/Frontend/HelloWorld_FE/src/index.js":"1","/mnt/c/Mine/Frontend/HelloWorld_FE/src/serviceWorker.js":"2","/mnt/c/Mine/Frontend/HelloWorld_FE/src/App.js":"3","/mnt/c/Mine/Frontend/HelloWorld_FE/src/app/store.js":"4","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/rootReducer.js":"5","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/botnav/botNavSlice.js":"6","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/events/eventSlice.js":"7","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/categories/categorySlice.js":"8","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/backdrop/backDropSlice.js":"9","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/films/filmSlice.jsx":"10","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/food/foodSlice.jsx":"11","/mnt/c/Mine/Frontend/HelloWorld_FE/src/utils/client.js":"12","/mnt/c/Mine/Frontend/HelloWorld_FE/src/contants/botnav.js":"13","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/NotFound.jsx":"14","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/AppBar.jsx":"15","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/Home.jsx":"16","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/films/FilmDetail.jsx":"17","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/food/FoodDetail.jsx":"18","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/food/FoodList.jsx":"19","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/films/FilmList.jsx":"20","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/Login.jsx":"21","/mnt/c/Mine/Frontend/HelloWorld_FE/src/contants/menu.js":"22","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/EventItem.jsx":"23","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/ListItemLink.jsx":"24","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/FoodCard.jsx":"25","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/FilmCard.jsx":"26","/mnt/c/Mine/Frontend/HelloWorld_FE/src/contants/eventIcon.js":"27","/mnt/c/Mine/Frontend/HelloWorld_FE/src/utils/utils.js":"28","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/protectedRoute.jsx":"29","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/ProtectedRoute.jsx":"30","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/users/userSlice.jsx":"31","/mnt/c/Mine/Frontend/HelloWorld_FE/src/utils/auth.js":"32","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/categories/CategoryList.js":"33","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/auth/authSlice.js":"34","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/events/EventList.jsx":"35","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/Profile.jsx":"36","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/BackDrop.jsx":"37","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/events/EventDetail.jsx":"38","/mnt/c/Mine/Frontend/HelloWorld_FE/src/theme/index.js":"39"},{"size":935,"mtime":1610436688257,"results":"40","hashOfConfig":"41"},{"size":4744,"mtime":1608170768646,"results":"42","hashOfConfig":"41"},{"size":3796,"mtime":1610443550743,"results":"43","hashOfConfig":"41"},{"size":165,"mtime":1608714074475,"results":"44","hashOfConfig":"41"},{"size":1081,"mtime":1608786514648,"results":"45","hashOfConfig":"41"},{"size":373,"mtime":1608170768578,"results":"46","hashOfConfig":"41"},{"size":2798,"mtime":1609315411238,"results":"47","hashOfConfig":"41"},{"size":2115,"mtime":1608781489093,"results":"48","hashOfConfig":"41"},{"size":417,"mtime":1608785319199,"results":"49","hashOfConfig":"41"},{"size":2572,"mtime":1609836382465,"results":"50","hashOfConfig":"41"},{"size":2690,"mtime":1610420720659,"results":"51","hashOfConfig":"41"},{"size":2591,"mtime":1610434240579,"results":"52","hashOfConfig":"41"},{"size":498,"mtime":1610442675564,"results":"53","hashOfConfig":"41"},{"size":279,"mtime":1609822442024,"results":"54","hashOfConfig":"41"},{"size":7838,"mtime":1610441013535,"results":"55","hashOfConfig":"41"},{"size":4252,"mtime":1610435489828,"results":"56","hashOfConfig":"41"},{"size":2827,"mtime":1610434424125,"results":"57","hashOfConfig":"41"},{"size":1992,"mtime":1610434475594,"results":"58","hashOfConfig":"41"},{"size":2909,"mtime":1610425768465,"results":"59","hashOfConfig":"41"},{"size":2217,"mtime":1610425797178,"results":"60","hashOfConfig":"41"},{"size":4205,"mtime":1609314104380,"results":"61","hashOfConfig":"41"},{"size":387,"mtime":1608170768569,"results":"62","hashOfConfig":"41"},{"size":1404,"mtime":1609816269974,"results":"63","hashOfConfig":"41"},{"size":648,"mtime":1609315504212,"results":"64","hashOfConfig":"41"},{"size":2123,"mtime":1610420875482,"results":"65","hashOfConfig":"41"},{"size":2066,"mtime":1610420915600,"results":"66","hashOfConfig":"41"},{"size":768,"mtime":1608170768566,"results":"67","hashOfConfig":"41"},{"size":686,"mtime":1608782937664,"results":"68","hashOfConfig":"41"},{"size":424,"mtime":1608518888426,"results":"69","hashOfConfig":"41"},{"size":687,"mtime":1609381313110,"results":"70","hashOfConfig":"41"},{"size":961,"mtime":1608784496026,"results":"71","hashOfConfig":"41"},{"size":1470,"mtime":1610416582331,"results":"72","hashOfConfig":"41"},{"size":1587,"mtime":1610420752130,"results":"73","hashOfConfig":"41"},{"size":1122,"mtime":1609316088871,"results":"74","hashOfConfig":"41"},{"size":1997,"mtime":1610444263955,"results":"75","hashOfConfig":"41"},{"size":3495,"mtime":1609382588065,"results":"76","hashOfConfig":"41"},{"size":469,"mtime":1609404177269,"results":"77","hashOfConfig":"41"},{"size":4796,"mtime":1610434600276,"results":"78","hashOfConfig":"41"},{"size":861,"mtime":1610444527702,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"4503j",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Mine/Frontend/HelloWorld_FE/src/index.js",["168","169"],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/serviceWorker.js",[],["170","171"],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/App.js",["172"],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/app/store.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/rootReducer.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/botnav/botNavSlice.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/events/eventSlice.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/categories/categorySlice.js",["173","174"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { get, getById } from '../../utils/client';\nimport { handleUnauthorizeError } from '../../utils/utils';\nimport { setStatus } from '../auth/authSlice';\n\nexport const selectAllCategory = (state) => state.category.categories;\n\nexport const selectCategoryById = (state) => state.category.category;\n\nexport const fetchCategories = createAsyncThunk(\n\t'films/fetchCategories',\n\tasync ({}, { getState, dispatch }) => {\n\t\ttry {\n\t\t\tconst response = await get('categories/', {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `${getState().auth.accessToken}`\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn response.results;\n\t\t} catch (error) {\n\t\t\tawait handleUnauthorizeError(error, { getState, dispatch });\n\t\t\tthrow error;\n\t\t}\n\t}\n);\n\nexport const getCategoryById = createAsyncThunk(\n\t'films/getCategoryById',\n\tasync (id, { getState, dispatch }) => {\n\t\ttry {\n\t\t\tconst response = await getById('categories', id, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `${getState().auth.accessToken}`\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn response;\n\t\t} catch (error) {\n\t\t\tawait handleUnauthorizeError(error, { getState, dispatch });\n\t\t\tthrow error;\n\t\t}\n\t}\n);\n\nconst categorySlice = createSlice({\n\tname: 'category',\n\tinitialState: {\n\t\tcategories: [],\n\t\tcategory: null,\n\t\tstatusAll: 'idle',\n\t\tstatusOne: 'idle',\n\t\terror: null\n\t},\n\treducers: {},\n\textraReducers: {\n\t\t[fetchCategories.pending]: (state, action) => {\n\t\t\tstate.status = 'loading';\n\t\t},\n\t\t[fetchCategories.fulfilled]: (state, action) => {\n\t\t\tstate.statusAll = 'succeeded';\n\t\t\t// Add any fetched posts to the array\n\t\t\tstate.categories = action.payload;\n\t\t},\n\t\t[fetchCategories.rejected]: (state, action) => {\n\t\t\tstate.statusAll = 'failed';\n\t\t\tstate.error = action.error.message;\n\t\t},\n\t\t[getCategoryById.pending]: (state, action) => {\n\t\t\tstate.statusOne = 'loading';\n\t\t},\n\t\t[getCategoryById.fulfilled]: (state, action) => {\n\t\t\tstate.statusOne = 'succeeded';\n\t\t\tstate.category = action.payload;\n\t\t},\n\t\t[getCategoryById.rejected]: (state, action) => {\n\t\t\tstate.statusOne = 'failed';\n\t\t\tstate.error = action.error.message;\n\t\t}\n\t}\n});\n\nexport default categorySlice.reducer;\n","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/backdrop/backDropSlice.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/films/filmSlice.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/food/foodSlice.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/utils/client.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/contants/botnav.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/NotFound.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/AppBar.jsx",["175","176","177"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Avatar from '@material-ui/core/Avatar';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItemLink from './ListItemLink';\nimport { MENU as menu } from '../contants/menu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from '../features/auth/authSlice';\nimport { Container } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\tgrow: {\n\t\tflexGrow: 1,\n\t\tmarginBottom: 16\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\ttitle: {\n\t\ttextShadow: '2px 2px 2px rgba(224, 66, 245, 0.4)',\n\t\tfontFamily: 'Brush Script MT'\n\t},\n\tsearch: {\n\t\tposition: 'relative',\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\n\t\t'&:hover': {\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25)\n\t\t},\n\t\tmarginRight: theme.spacing(2),\n\t\tmarginLeft: 0,\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tmarginLeft: theme.spacing(3),\n\t\t\twidth: 'auto'\n\t\t}\n\t},\n\tsearchIcon: {\n\t\tpadding: theme.spacing(0, 2),\n\t\theight: '100%',\n\t\tposition: 'absolute',\n\t\tpointerEvents: 'none',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center'\n\t},\n\tinputRoot: {\n\t\tcolor: 'inherit'\n\t},\n\tinputInput: {\n\t\tpadding: theme.spacing(1, 1, 1, 0),\n\t\t// vertical padding + font size from searchIcon\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n\t\ttransition: theme.transitions.create('width'),\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\twidth: '20ch'\n\t\t}\n\t},\n\tsectionDesktop: {\n\t\tdisplay: 'none',\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\tdisplay: 'flex'\n\t\t}\n\t},\n\tsectionMobile: {\n\t\tdisplay: 'flex',\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\tdisplay: 'none'\n\t\t}\n\t},\n\tstickToTop: {\n\t\twidth: '100%',\n\t\tposition: 'fixed',\n\t\ttop: 0,\n\t\tzIndex: 1000\n\t},\n\tsmall: {\n\t\twidth: theme.spacing(3),\n\t\theight: theme.spacing(3)\n\t}\n}));\n\nexport default function PrimarySearchAppBar(props) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\n\tconst [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\tconst [open, setOpen] = React.useState(false);\n\tconst isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\tlet isMenuOpen = Boolean(anchorEl);\n\n\tconst currentUser = useSelector((state) => state.user.currentUser);\n\n\tconst handleMobileMenuClose = () => {\n\t\tsetMobileMoreAnchorEl(null);\n\t};\n\n\tconst handleMobileMenuOpen = (event) => {\n\t\tif (props.isAuth) {\n\t\t\tsetMobileMoreAnchorEl(event.currentTarget);\n\t\t}\n\t};\n\n\tconst handleProfileMenuOpen = (event) => {\n\t\tif (props.isAuth) {\n\t\t\tsetAnchorEl(event.currentTarget);\n\t\t}\n\t};\n\tconst handleMenuClose = () => {\n\t\tsetAnchorEl(null);\n\t\thandleMobileMenuClose();\n\t};\n\n\tconst handleDrawerOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\t// const handleDrawerClose = () => {\n\t// \tsetOpen(false);\n\t// };\n\n\tconst handleClickAway = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst signOut = () => {\n\t\tdispatch(logOut());\n\t};\n\n\tconst goToProfile = () => {\n\t\thistory.push('/profile');\n\t\tsetMobileMoreAnchorEl(null);\n\t};\n\n\tconst menuId = 'primary-search-account-menu';\n\tconst renderMenu = (\n\t\t<Menu\n\t\t\tanchorEl={anchorEl}\n\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\tid={menuId}\n\t\t\tkeepMounted\n\t\t\ttransformOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\topen={isMenuOpen}\n\t\t\tonClose={handleMenuClose}\n\t\t>\n\t\t\t<MenuItem onClick={goToProfile}>Profile</MenuItem>\n\t\t\t<MenuItem onClick={signOut}>Đăng xuất</MenuItem>\n\t\t</Menu>\n\t);\n\n\tconst mobileMenuId = 'primary-search-account-menu-mobile';\n\tconst renderMobileMenu = (\n\t\t<Menu\n\t\t\tanchorEl={mobileMoreAnchorEl}\n\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\tid={mobileMenuId}\n\t\t\tkeepMounted\n\t\t\ttransformOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\topen={isMobileMenuOpen}\n\t\t\tonClose={handleMobileMenuClose}\n\t\t>\n\t\t\t<MenuItem>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label=\"show 11 new notifications\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t>\n\t\t\t\t\t<Badge badgeContent={11} color=\"secondary\">\n\t\t\t\t\t\t<NotificationsIcon />\n\t\t\t\t\t</Badge>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Thông báo</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem onClick={goToProfile}>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label=\"show 11 new notifications\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<NotificationsIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Profile</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem onClick={signOut}>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\taria-controls=\"primary-search-account-menu\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t>\n\t\t\t\t\t<AccountCircle />\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Đăng xuất</p>\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t);\n\n\treturn (\n\t\t<ClickAwayListener onClickAway={handleClickAway}>\n\t\t\t<div className={classes.grow}>\n\t\t\t\t<AppBar className={classes.stickToTop} color=\"primary\">\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\tclassName={[classes.menuButton]}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tclassName={[classes.title, 'pointer']}\n\t\t\t\t\t\t\t\tvariant=\"h4\"\n\t\t\t\t\t\t\t\tnoWrap\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thistory.push('/');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tHello World\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<div className={classes.grow} />\n\t\t\t\t\t\t\t<div className={classes.sectionDesktop}>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label=\"show 4 new mails\"\n\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Badge badgeContent={4} color=\"secondary\">\n\t\t\t\t\t\t\t\t\t\t<MailIcon />\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label=\"show 17 new notifications\"\n\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Badge badgeContent={17} color=\"secondary\">\n\t\t\t\t\t\t\t\t\t\t<NotificationsIcon />\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\t\t\taria-controls={menuId}\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\tonClick={handleProfileMenuOpen}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<AccountCircle />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={classes.sectionMobile}>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label=\"show more\"\n\t\t\t\t\t\t\t\t\taria-controls={mobileMenuId}\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\tonClick={handleMobileMenuOpen}\n\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\talt=\"Remy Sharp\"\n\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\tcurrentUser && currentUser.avatar\n\t\t\t\t\t\t\t\t\t\t\t\t? currentUser.avatar\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.small}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</Container>\n\t\t\t\t</AppBar>\n\t\t\t\t{renderMobileMenu}\n\t\t\t\t{renderMenu}\n\t\t\t\t<Drawer variant=\"persistent\" anchor=\"left\" open={open}>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t{menu.map((item) => (\n\t\t\t\t\t\t\t<ListItemLink\n\t\t\t\t\t\t\t\tkey={item.link}\n\t\t\t\t\t\t\t\tto={item.link}\n\t\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\t\ticon={item.icon}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</Drawer>\n\t\t\t</div>\n\t\t</ClickAwayListener>\n\t);\n}\n","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/Home.jsx",["178"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport moment from 'moment-timezone';\nimport { get } from '../utils/client';\n\nconst categories = [\n\t{\n\t\turl: '/images/cinema.jpg',\n\t\ttitle: 'Phim ảnh',\n\t\twidth: '100%',\n\t\tlink: '/films'\n\t},\n\t{\n\t\turl: '/images/foods.jpg',\n\t\ttitle: 'Đồ ăn',\n\t\twidth: '100%',\n\t\tlink: '/foods'\n\t},\n\t{\n\t\turl: '/images/events.jpg',\n\t\ttitle: 'Sự kiện',\n\t\twidth: '100%',\n\t\tlink: '/events'\n\t}\n];\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t\tminWidth: 300,\n\t\twidth: '100%'\n\t},\n\timage: {\n\t\tposition: 'relative',\n\t\theight: 200,\n\t\t[theme.breakpoints.down('xs')]: {\n\t\t\twidth: '100% !important', // Overrides inline-style\n\t\t\theight: 100\n\t\t},\n\t\t'&:hover, &$focusVisible': {\n\t\t\tzIndex: 1,\n\t\t\t'& $imageBackdrop': {\n\t\t\t\topacity: 0.15\n\t\t\t},\n\t\t\t'& $imageMarked': {\n\t\t\t\topacity: 0\n\t\t\t},\n\t\t\t'& $imageTitle': {\n\t\t\t\tborder: '4px solid currentColor'\n\t\t\t}\n\t\t}\n\t},\n\tfocusVisible: {},\n\timageButton: {\n\t\tposition: 'absolute',\n\t\tleft: 0,\n\t\tright: 0,\n\t\ttop: 0,\n\t\tbottom: 0,\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tcolor: theme.palette.common.white\n\t},\n\timageSrc: {\n\t\tposition: 'absolute',\n\t\tleft: 0,\n\t\tright: 0,\n\t\ttop: 0,\n\t\tbottom: 0,\n\t\tbackgroundSize: 'cover',\n\t\tbackgroundPosition: 'center 40%'\n\t},\n\timageBackdrop: {\n\t\tposition: 'absolute',\n\t\tleft: 0,\n\t\tright: 0,\n\t\ttop: 0,\n\t\tbottom: 0,\n\t\tbackgroundColor: theme.palette.common.black,\n\t\topacity: 0.4,\n\t\ttransition: theme.transitions.create('opacity')\n\t},\n\timageTitle: {\n\t\tposition: 'relative',\n\t\tpadding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\n\t\t\ttheme.spacing(1) + 6\n\t\t}px`\n\t},\n\timageMarked: {\n\t\theight: 3,\n\t\twidth: 18,\n\t\tbackgroundColor: theme.palette.common.white,\n\t\tposition: 'absolute',\n\t\tbottom: -2,\n\t\tleft: 'calc(50% - 9px)',\n\t\ttransition: theme.transitions.create('opacity')\n\t},\n\tafterBar: {\n\t\tmarginTop: theme.spacing(7)\n\t}\n}));\n\nexport default function Home(props) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst [exchangeRate, setExchangeRate] = useState('');\n\tconst accessToken = useSelector((state) => state.auth.accessToken);\n\tconst goToPage = (link) => {\n\t\tprops.history.push(link);\n\t};\n\n\tuseEffect(() => {\n\t\tasync function getExchangeRateToDay() {\n\t\t\ttry {\n\t\t\t\tconst response = await get('exchange-rates/actions/', {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: accessToken\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// console.log(response);\n\t\t\t\tsetExchangeRate(response.data);\n\t\t\t} catch (error) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\tgetExchangeRateToDay();\n\t}, [dispatch, exchangeRate]);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Container fixed className={classes.afterBar}>\n\t\t\t\t<Grid>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\">\n\t\t\t\t\t\t\tTỉ giá VND/AUD ngày {moment().format('YYYY-MM-DD')}:\n\t\t\t\t\t\t\t{' 17.444 '}\n\t\t\t\t\t\t\t{exchangeRate}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t\t<Container className={classes.afterBar}>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t\t<Grid item lg={4} xs={12}>\n\t\t\t\t\t\t\t<ButtonBase\n\t\t\t\t\t\t\t\tfocusRipple\n\t\t\t\t\t\t\t\tkey={category.title}\n\t\t\t\t\t\t\t\tclassName={classes.image}\n\t\t\t\t\t\t\t\tfocusVisibleClassName={classes.focusVisible}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: '100%'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => goToPage(category.link)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={classes.imageSrc}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${category.url})`\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className={classes.imageBackdrop} />\n\t\t\t\t\t\t\t\t<span className={classes.imageButton}>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.imageTitle}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{category.title}\n\t\t\t\t\t\t\t\t\t\t<span className={classes.imageMarked} />\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</ButtonBase>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/films/FilmDetail.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/food/FoodDetail.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/food/FoodList.jsx",["179","180"],"import React, { useEffect, Suspense, lazy, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FoodCard from '../../components/FoodCard';\r\nimport { CategoryList } from '../categories/CategoryList';\r\nimport {\r\n\tfetchFoods,\r\n\tselectAllFood,\r\n\tnextPage,\r\n\tsetLoadMore,\r\n\tdestroySession\r\n} from './foodSlice';\r\n\r\nconst BackDropCustom = lazy(() => import('../../components/BackDrop'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\tdisplay: 'flex',\r\n\t\t'& > *': {\r\n\t\t\tmargin: theme.spacing(1)\r\n\t\t}\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.secondary\r\n\t},\r\n\tlarge: {\r\n\t\twidth: theme.spacing(6),\r\n\t\theight: theme.spacing(6)\r\n\t}\r\n}));\r\n\r\nconst FoodList = (props) => {\r\n\tconst data = useSelector(selectAllFood);\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst isLoadMore = useSelector((state) => state.food.isLoadMore);\r\n\tconst total = useSelector((state) => state.food.total);\r\n\tconst isNew = useSelector((state) => state.auth.isNew);\r\n\tconst query = useSelector((state) => state.food.query);\r\n\tconst dispatch = useDispatch();\r\n\tconst loadMore = () => {\r\n\t\tif (data.length !== 0 && data.length >= total) {\r\n\t\t\tdispatch(setLoadMore(false));\r\n\t\t} else {\r\n\t\t\tdispatch(nextPage(query.page + 1));\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getData() {\r\n\t\t\tsetOpen(true);\r\n\t\t\tawait dispatch(fetchFoods(query));\r\n\t\t\tsetOpen(false);\r\n\t\t}\r\n\r\n\t\tgetData();\r\n\t\treturn () => {\r\n\t\t\tif (props.history.location.pathname !== '/foods') {\r\n\t\t\t\tdispatch(destroySession());\r\n\t\t\t}\r\n\t\t};\r\n\t}, [dispatch, isNew, query]);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t<BackDropCustom open={open} />\r\n\t\t\t</Suspense>\r\n\t\t\t<Container fixed style={{ marginTop: 100 }}>\r\n\t\t\t\t<Grid container spacing={3} style={{ marginBottom: 16 }}>\r\n\t\t\t\t\t<CategoryList />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t\t<Container\r\n\t\t\t\tfixed\r\n\t\t\t\tstyle={{ marginBottom: 50, paddingLeft: 0, paddingRight: 0 }}\r\n\t\t\t>\r\n\t\t\t\t{data.length > 0 ? (\r\n\t\t\t\t\t<InfiniteScroll\r\n\t\t\t\t\t\tdataLength={data.length}\r\n\t\t\t\t\t\tnext={loadMore}\r\n\t\t\t\t\t\thasMore={isLoadMore}\r\n\t\t\t\t\t\tloader={<h4>Loading...</h4>}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t{data.length > 0\r\n\t\t\t\t\t\t\t\t? data.map((food) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={food.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ padding: 16 }}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FoodCard food={food} />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</InfiniteScroll>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default FoodList;\r\n","/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/films/FilmList.jsx",["181"],"import React, { useEffect, useState, Suspense, lazy } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport FilmCard from '../../components/FilmCard';\r\nimport {\r\n\tselectAllFilm,\r\n\tfetchFilms,\r\n\tnextPage,\r\n\tsetLoadMore,\r\n\tdestroySession\r\n} from './filmSlice';\r\nconst BackDropCustom = lazy(() => import('../../components/BackDrop'));\r\n\r\nconst FilmList = (props) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst data = useSelector(selectAllFilm);\r\n\tconst isLoadMore = useSelector((state) => state.film.isLoadMore);\r\n\tconst total = useSelector((state) => state.film.total);\r\n\tconst isNew = useSelector((state) => state.auth.isNew);\r\n\tconst query = useSelector((state) => state.film.query);\r\n\tconst dispatch = useDispatch();\r\n\tconst loadMore = () => {\r\n\t\tif (data.length !== 0 && data.length >= total) {\r\n\t\t\tdispatch(setLoadMore(false));\r\n\t\t} else {\r\n\t\t\tdispatch(nextPage(query.page + 1));\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tasync function getData() {\r\n\t\t\tsetOpen(true);\r\n\t\t\tawait dispatch(fetchFilms(query));\r\n\t\t\tsetOpen(false);\r\n\t\t}\r\n\r\n\t\tgetData();\r\n\t\treturn () => {\r\n\t\t\tif (props.history.location.pathname !== '/films') {\r\n\t\t\t\tdispatch(destroySession());\r\n\t\t\t}\r\n\t\t};\r\n\t}, [dispatch, isNew, query]);\r\n\treturn (\r\n\t\t<Container\r\n\t\t\tstyle={{\r\n\t\t\t\tpaddingTop: 60,\r\n\t\t\t\tpaddingBottom: 50,\r\n\t\t\t\tpaddingLeft: 0,\r\n\t\t\t\tpaddingRight: 0\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t<BackDropCustom open={open} />\r\n\t\t\t</Suspense>\r\n\t\t\t<InfiniteScroll\r\n\t\t\t\tdataLength={data.length}\r\n\t\t\t\tnext={loadMore}\r\n\t\t\t\thasMore={isLoadMore}\r\n\t\t\t\tloader={<h4>Loading...</h4>}\r\n\t\t\t>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t{data.length > 0\r\n\t\t\t\t\t\t? data.map((film) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\t\t\t\tsm={4}\r\n\t\t\t\t\t\t\t\t\t\tkey={film.id}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: 16\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<FilmCard film={film} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t: ''}\r\n\t\t\t\t</Grid>\r\n\t\t\t</InfiniteScroll>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default FilmList;\r\n","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/Login.jsx",["182"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { authenticate, isAuthenticate } from '../utils/auth';\r\nimport { setAccessToken, setRefreshToken } from '../features/auth/authSlice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap'\r\n\t},\r\n\tmargin: {\r\n\t\tmarginBottom: theme.spacing(1)\r\n\t},\r\n\twithoutLabel: {\r\n\t\tmarginTop: theme.spacing(3)\r\n\t}\r\n}));\r\n\r\nexport default function LoginForm(props) {\r\n\tconst [values, setValues] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tshowPassword: false\r\n\t});\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tconst classes = useStyles();\r\n\r\n\tconst accessToken = useSelector((state) => state.auth.accessToken);\r\n\tconst refreshToken = useSelector((state) => state.auth.refreshToken);\r\n\r\n\tconst handleChange = (prop) => (event) => {\r\n\t\tsetValues({ ...values, [prop]: event.target.value });\r\n\t};\r\n\r\n\tconst handleClickShowPassword = () => {\r\n\t\tsetValues({ ...values, showPassword: !values.showPassword });\r\n\t};\r\n\r\n\tconst handleMouseDownPassword = (event) => {\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\tconst login = async () => {\r\n\t\ttry {\r\n\t\t\tconst data = await authenticate({\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password\r\n\t\t\t});\r\n\t\t\tdispatch(setAccessToken(data.access));\r\n\t\t\tdispatch(setRefreshToken(data.refresh));\r\n\t\t\thistory.push('/');\r\n\t\t} catch (error) {\r\n\t\t\thistory.push('/login');\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (isAuthenticate(accessToken, refreshToken)) {\r\n\t\t\thistory.push(props.redirectPath || '/');\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Container maxWidth=\"sm\">\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tspacing={0}\r\n\t\t\t\tdirection=\"column\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\tstyle={{ minHeight: '100vh' }}\r\n\t\t\t>\r\n\t\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tclassName={clsx(classes.margin, classes.textField)}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">\r\n\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\tid=\"outlined-adornment-password\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\tonChange={handleChange('email')}\r\n\t\t\t\t\t\t\tlabelWidth={70}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tclassName={clsx(classes.margin, classes.textField)}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">\r\n\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\tid=\"outlined-adornment-password\"\r\n\t\t\t\t\t\t\ttype={values.showPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\tonChange={handleChange('password')}\r\n\t\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword}\r\n\t\t\t\t\t\t\t\t\t\tonMouseDown={handleMouseDownPassword}\r\n\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{values.showPassword ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Visibility />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<VisibilityOff />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabelWidth={70}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={login}\r\n\t\t\t\t\t\tclassName={classes.margin}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tĐăng nhập\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","/mnt/c/Mine/Frontend/HelloWorld_FE/src/contants/menu.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/EventItem.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/ListItemLink.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/FoodCard.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/FilmCard.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/contants/eventIcon.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/utils/utils.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/protectedRoute.jsx",["183","184"],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/ProtectedRoute.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/users/userSlice.jsx",["185"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getCurrentUser, isAuthenticate } from '../../utils/auth';\r\n\r\nexport const fetchUserDetail = createAsyncThunk(\r\n\t'users/fetchUserDetail',\r\n\tasync (token) => {\r\n\t\ttry {\r\n\t\t\tconst response = await getCurrentUser(token);\r\n\t\t\treturn response;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n);\r\n\r\nconst userSlice = createSlice({\r\n\tname: 'user',\r\n\tinitialState: {\r\n\t\tcurrentUser: null,\r\n\t\tstatus: 'idle',\r\n\t\terror: null\r\n\t},\r\n\treducers: {},\r\n\textraReducers: {\r\n\t\t[fetchUserDetail.pending]: (state, action) => {\r\n\t\t\tstate.status = 'loading';\r\n\t\t},\r\n\t\t[fetchUserDetail.fulfilled]: (state, action) => {\r\n\t\t\tstate.status = 'succeeded';\r\n\t\t\t// Add any fetched posts to the array\r\n\t\t\tstate.currentUser = action.payload;\r\n\t\t},\r\n\t\t[fetchUserDetail.rejected]: (state, action) => {\r\n\t\t\tstate.status = 'failed';\r\n\t\t\tstate.error = action.error.message;\r\n\t\t}\r\n\t}\r\n});\r\nexport default userSlice.reducer;\r\n","/mnt/c/Mine/Frontend/HelloWorld_FE/src/utils/auth.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/categories/CategoryList.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/auth/authSlice.js",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/events/EventList.jsx",["186"],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/Profile.jsx",["187"],"import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUserDetail } from '../features/users/userSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tminWidth: 300,\r\n\t\twidth: '100%'\r\n\t},\r\n\tmargin: {\r\n\t\tmarginBottom: theme.spacing(1)\r\n\t},\r\n\twithoutLabel: {\r\n\t\tmarginTop: theme.spacing(3)\r\n\t}\r\n}));\r\n\r\nconst Profile = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst classes = useStyles();\r\n\tconst token = useSelector((state) => state.auth.accessToken);\r\n\tconst currentUser = useSelector((state) => state.user.currentUser);\r\n\tuseEffect(() => {\r\n\t\tconsole.log('useEffect');\r\n\t\tdispatch(fetchUserDetail(token));\r\n\t}, [dispatch]);\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Container fixed style={{ marginTop: 50 }}>\r\n\t\t\t\t<Typography variant=\"h6\" component=\"h2\">\r\n\t\t\t\t\tTHÔNG TIN CÁ NHÂN\r\n\t\t\t\t</Typography>\r\n\t\t\t</Container>\r\n\t\t\t<Container fixed style={{ marginTop: 50 }}>\r\n\t\t\t\t<Grid container spacing={0} direction=\"column\">\r\n\t\t\t\t\t<form\r\n\t\t\t\t\t\tclassName={classes.root}\r\n\t\t\t\t\t\tnoValidate\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tclassName={clsx(classes.margin, classes.textField)}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">\r\n\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\tid=\"outlined-adornment-password\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={currentUser ? currentUser.email : ''}\r\n\t\t\t\t\t\t\t\tlabelWidth={70}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tclassName={clsx(classes.margin, classes.textField)}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">\r\n\t\t\t\t\t\t\t\tSpouse Name\r\n\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\tid=\"outlined-adornment-password\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\tcurrentUser ? currentUser.spouse_name : ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabelWidth={70}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tclassName={clsx(classes.margin, classes.textField)}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">\r\n\t\t\t\t\t\t\t\tFirst Name\r\n\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\tid=\"outlined-adornment-password\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\tcurrentUser ? currentUser.first_name : ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabelWidth={70}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tclassName={clsx(classes.margin, classes.textField)}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">\r\n\t\t\t\t\t\t\t\tFavourite\r\n\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\tid=\"outlined-adornment-password\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={currentUser ? currentUser.favourite : ''}\r\n\t\t\t\t\t\t\t\tlabelWidth={70}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","/mnt/c/Mine/Frontend/HelloWorld_FE/src/components/BackDrop.jsx",[],"/mnt/c/Mine/Frontend/HelloWorld_FE/src/features/events/EventDetail.jsx",["188"],"import moment from 'moment-timezone';\r\nimport {\r\n\tContainer,\r\n\tGrid,\r\n\tDivider,\r\n\tTypography,\r\n\tmakeStyles,\r\n\tChip,\r\n\tGridList,\r\n\tGridListTile,\r\n\tGridListTileBar,\r\n\tIconButton\r\n} from '@material-ui/core';\r\nimport { StarBorder } from '@material-ui/icons';\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getEventById, selectEventById } from './eventSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tdescriptionText: {\r\n\t\tcolor: 'grey'\r\n\t},\r\n\teventName: {\r\n\t\tfontWeight: 'bold',\r\n\t\ttextShadow: '2 2'\r\n\t},\r\n\tspanText: {\r\n\t\tcolor: 'grey',\r\n\t\tfontStyle: 'italic'\r\n\t},\r\n\tcloseDay: {\r\n\t\tcolor: 'red'\r\n\t},\r\n\tfarDay: {\r\n\t\tcolor: 'green'\r\n\t},\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tjustifyContent: 'space-around',\r\n\t\toverflow: 'hidden',\r\n\t\tbackgroundColor: theme.palette.background.paper\r\n\t},\r\n\tgridList: {}\r\n}));\r\n\r\nconst tileData = [\r\n\t{\r\n\t\timg: '/images/event_image.jpg',\r\n\t\ttitle: 'Image',\r\n\t\tauthor: 'author',\r\n\t\tcols: 2\r\n\t},\r\n\t{\r\n\t\timg: '/images/event_image.jpg',\r\n\t\ttitle: 'Image',\r\n\t\tauthor: 'author',\r\n\t\tcols: 2\r\n\t},\r\n\t{\r\n\t\timg: '/images/event_image.jpg',\r\n\t\ttitle: 'Image',\r\n\t\tauthor: 'author',\r\n\t\tcols: 3\r\n\t},\r\n\t{\r\n\t\timg: '/images/event_image.jpg',\r\n\t\ttitle: 'Image',\r\n\t\tauthor: 'author',\r\n\t\tcols: 1\r\n\t},\r\n\t{\r\n\t\timg: '/images/event_image.jpg',\r\n\t\ttitle: 'Image',\r\n\t\tauthor: 'author',\r\n\t\tcols: 2\r\n\t}\r\n];\r\n\r\nexport const EventDetail = (props) => {\r\n\tconst { match } = props;\r\n\tconst dispatch = useDispatch();\r\n\tconst classes = useStyles();\r\n\tconst event = useSelector(selectEventById);\r\n\tconst status = useSelector((state) => state.event.statusOne);\r\n\tconst isNew = useSelector((state) => state.auth.isNew);\r\n\r\n\tconst renderContentSuccess = () => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Container\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tpaddingTop: 60,\r\n\t\t\t\t\t\tpaddingBottom: 60,\r\n\t\t\t\t\t\ttextAlign: 'left'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t<Grid item lg={6} xs={12}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc=\"/images/event_thumbnail.jpg\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<GridList\r\n\t\t\t\t\t\t\t\tcellHeight={200}\r\n\t\t\t\t\t\t\t\tspacing={1}\r\n\t\t\t\t\t\t\t\tclassName={classes.gridList}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{tileData.map((tile) => (\r\n\t\t\t\t\t\t\t\t\t<GridListTile\r\n\t\t\t\t\t\t\t\t\t\tkey={tile.img}\r\n\t\t\t\t\t\t\t\t\t\tcols={tile.featured ? 2 : 1}\r\n\t\t\t\t\t\t\t\t\t\trows={tile.featured ? 2 : 1}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<img src={tile.img} alt={tile.title} />\r\n\t\t\t\t\t\t\t\t\t\t<GridListTileBar\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={tile.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitlePosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\tactionIcon={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label={`star ${tile.title}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<StarBorder />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tactionPosition=\"left\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.titleBar}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</GridList>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item lg={6} xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\">\r\n\t\t\t\t\t\t\t\t\t{event.name}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={classes.spanText}\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginRight: 5 }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tTag:\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tlabel={event.tag.name}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: event.tag.color,\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'white'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t\t\t\tThời gian\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<span className={classes.spanText}>\r\n\t\t\t\t\t\t\t\t\t\t{moment(event.due_date).format(\r\n\t\t\t\t\t\t\t\t\t\t\t'DD-MM-YYYY'\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t\t\t\tCòn lại\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\tremainTime < 60\r\n\t\t\t\t\t\t\t\t\t\t\t\t? classes.closeDay\r\n\t\t\t\t\t\t\t\t\t\t\t\t: classes.farDay\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{remainTime}{' '}\r\n\t\t\t\t\t\t\t\t\t\t{remainTime > 0 ? 'ngày' : ''}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Container>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t};\r\n\tlet remainTime = 0;\r\n\tlet content;\r\n\tuseEffect(() => {\r\n\t\tdispatch(getEventById(match.params.id));\r\n\t}, [dispatch, isNew, match.params.id]);\r\n\r\n\tif (status === 'succeeded') {\r\n\t\tconst now = moment();\r\n\t\tremainTime = now.diff(event.due_date, 'days');\r\n\t\tif (remainTime < 0) {\r\n\t\t\tremainTime = `${Math.abs(remainTime)}`;\r\n\t\t} else {\r\n\t\t\tremainTime = <Chip label=\"Đã qua\" disabled variant=\"outlined\" />;\r\n\t\t}\r\n\t\tcontent = renderContentSuccess(event);\r\n\t}\r\n\tif (status === 'failed') {\r\n\t\treturn <Redirect to=\"/not-found\" />;\r\n\t}\r\n\treturn <div>{content}</div>;\r\n};\r\n","/mnt/c/Mine/Frontend/HelloWorld_FE/src/theme/index.js",[],{"ruleId":"189","severity":1,"message":"190","line":9,"column":10,"nodeType":"191","messageId":"192","endLine":9,"endColumn":24},{"ruleId":"189","severity":1,"message":"193","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":16},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":71,"column":5,"nodeType":"200","endLine":71,"endColumn":32,"suggestions":"201"},{"ruleId":"189","severity":1,"message":"202","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":12,"column":9,"nodeType":"205","messageId":"206","endLine":12,"endColumn":11},{"ruleId":"189","severity":1,"message":"207","line":4,"column":28,"nodeType":"191","messageId":"192","endLine":4,"endColumn":36},{"ruleId":"189","severity":1,"message":"208","line":9,"column":8,"nodeType":"191","messageId":"192","endLine":9,"endColumn":17},{"ruleId":"189","severity":1,"message":"209","line":14,"column":8,"nodeType":"191","messageId":"192","endLine":14,"endColumn":18},{"ruleId":"198","severity":1,"message":"210","line":136,"column":5,"nodeType":"200","endLine":136,"endColumn":29,"suggestions":"211"},{"ruleId":"189","severity":1,"message":"212","line":19,"column":7,"nodeType":"191","messageId":"192","endLine":19,"endColumn":16},{"ruleId":"198","severity":1,"message":"213","line":67,"column":5,"nodeType":"200","endLine":67,"endColumn":29,"suggestions":"214"},{"ruleId":"198","severity":1,"message":"213","line":44,"column":5,"nodeType":"200","endLine":44,"endColumn":29,"suggestions":"215"},{"ruleId":"198","severity":1,"message":"216","line":74,"column":5,"nodeType":"200","endLine":74,"endColumn":7,"suggestions":"217"},{"ruleId":"218","severity":2,"message":"219","line":5,"column":4,"nodeType":"220","endLine":5,"endColumn":9},{"ruleId":"218","severity":2,"message":"221","line":9,"column":14,"nodeType":"220","endLine":9,"endColumn":22},{"ruleId":"189","severity":1,"message":"222","line":2,"column":26,"nodeType":"191","messageId":"192","endLine":2,"endColumn":40},{"ruleId":"198","severity":1,"message":"213","line":43,"column":5,"nodeType":"200","endLine":43,"endColumn":29,"suggestions":"223"},{"ruleId":"198","severity":1,"message":"224","line":36,"column":5,"nodeType":"200","endLine":36,"endColumn":15,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":101,"column":8,"nodeType":"228","endLine":104,"endColumn":10},"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'orange' is defined but never used.","no-native-reassign",["229"],"no-negated-in-lhs",["230"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["231"],"'setStatus' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useTheme' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.",["232"],"'useStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history.location.pathname'. Either include it or remove the dependency array.",["233"],["234"],"React Hook useEffect has missing dependencies: 'accessToken', 'history', 'props.redirectPath', and 'refreshToken'. Either include them or remove the dependency array.",["235"],"react/jsx-no-undef","'Route' is not defined.","JSXIdentifier","'Redirect' is not defined.","'isAuthenticate' is defined but never used.",["236"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["237"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"242","fix":"244"},{"desc":"245","fix":"246"},{"desc":"242","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [dispatch, history.location.pathname]",{"range":"250","text":"251"},"Update the dependencies array to be: [accessToken, dispatch, exchangeRate]",{"range":"252","text":"253"},"Update the dependencies array to be: [dispatch, isNew, props.history.location.pathname, query]",{"range":"254","text":"255"},{"range":"256","text":"255"},"Update the dependencies array to be: [accessToken, history, props.redirectPath, refreshToken]",{"range":"257","text":"258"},{"range":"259","text":"255"},"Update the dependencies array to be: [dispatch, token]",{"range":"260","text":"261"},[2213,2240],"[dispatch, history.location.pathname]",[2874,2898],"[accessToken, dispatch, exchangeRate]",[1812,1836],"[dispatch, isNew, props.history.location.pathname, query]",[1361,1385],[2288,2290],"[accessToken, history, props.redirectPath, refreshToken]",[1341,1365],[1139,1149],"[dispatch, token]"]